name: Build APK
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # s√©curit√© si Gradle freeze

    steps:
      # 1Ô∏è‚É£ Checkout le repo
      - name: Checkout
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Installer Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Installer les d√©pendances npm
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 4Ô∏è‚É£ V√©rifier et installer AsyncStorage
      - name: Ensure AsyncStorage installed
        run: |
          if ! npm list @react-native-async-storage/async-storage >/dev/null 2>&1; then
            npm install @react-native-async-storage/async-storage --legacy-peer-deps
          fi

      # 5Ô∏è‚É£ Installer Android SDK officiel
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: 33.0.2

      # 6Ô∏è‚É£ Expo prebuild
      - name: Expo prebuild
        run: npx expo prebuild --platform android --no-install

      # 7Ô∏è‚É£ Rendre gradlew ex√©cutable
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      # 8Ô∏è‚É£ D√©tecter automatiquement la version Kotlin compatible avec Expo
      - name: Detect compatible Kotlin
        id: kotlin
        run: |
          # Liste de versions Kotlin support√©es par Gradle/Expo
          KOTLIN_VERSIONS=("2.2.20" "2.2.10" "2.2.0" "2.1.21" "2.1.20" "2.0.21")
          for KV in "${KOTLIN_VERSIONS[@]}"; do
            echo "Trying Kotlin version $KV"
            ./gradlew assembleRelease -PkotlinVersion=$KV --dry-run >/dev/null 2>&1
            if [ $? -eq 0 ]; then
              echo "Detected compatible Kotlin version: $KV"
              echo "kotlin_version=$KV" >> $GITHUB_OUTPUT
              break
            fi
          done

      # 9Ô∏è‚É£ Build Android Release avec retry
      - name: Build Android Release
        working-directory: android
        run: |
          MAX_TRIES=3
          TRY=1
          SUCCESS=0
          while [ $TRY -le $MAX_TRIES ]; do
            echo "Build attempt #$TRY with Kotlin ${{ steps.kotlin.outputs.kotlin_version }}"
            if ./gradlew assembleRelease -PkotlinVersion=${{ steps.kotlin.outputs.kotlin_version }}; then
              SUCCESS=1
              echo "Build succeeded on attempt #$TRY"
              break
            else
              echo "Build failed on attempt #$TRY"
              ((TRY++))
            fi
          done
          if [ $SUCCESS -ne 1 ]; then
            echo "üö® Build failed after $MAX_TRIES attempts"
            exit 1
          fi

      # üîü Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload package-lock.json pour debug
      - name: Upload package-lock
        uses: actions/upload-artifact@v4
        with:
          name: package-lock
          path: package-lock.json
